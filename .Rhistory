library(readr)
library(dplyr)
library(FactoMineR)
library(factoextra)
library(corrplot)
library(ggplot2)
library(tidyverse)
library(ggcorrplot)
library(ggspatial)
#library(ggsn)
library(raster)
#library(rgdal)
library(sf)
library(sp)
library(GGally)
library(stats)
library(maps)
library(psych)
set.seed(111)
options(scipen = 999)
df_teresina = read.csv("SES_Teresina.csv")
df_teresina$ID = df_teresina$area_de_ponderacao %% 100
sum(df_teresina$N)
subset(df_teresina[order(df_teresina$N), ], select = c('ID', 'N'))
lab.corr_saneamento = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL')
lab.corr_moradia = c('P_MATPAREDES', 'P_OVERCROWDING')
lab.corr_emprego = c('P_DESEMP', 'P_FORTRAB')
lab.corr_educacao = c('P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
lab.corr = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL',
'P_MATPAREDES', 'P_OVERCROWDING',
'P_DESEMP', 'P_FORTRAB',
'P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
data.frame(as.matrix(colMeans(df_teresina[, lab.corr_saneamento]), 2))
lab.corr_saneamento = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL')
lab.corr_moradia = c('P_MATPAREDES', 'P_OVERCROWDING')
lab.corr_emprego = c('P_DESEMP', 'P_FORTRAB')
lab.corr_educacao = c('P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
lab.corr = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL',
'P_MATPAREDES', 'P_OVERCROWDING',
'P_DESEMP', 'P_FORTRAB',
'P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
data.frame(as.matrix(colMeans(df_teresina[, lab.corr_saneamento]), 2))
data.frame(as.matrix(colMeans(df_teresina[, lab.corr_moradia]), 2))
data.frame(as.matrix(colMeans(df_teresina[, lab.corr_emprego]), 2))
data.frame(as.matrix(colMeans(df_teresina[, lab.corr_emprego]), 2))
data.frame(as.matrix(colMeans(df_teresina[, lab.corr_educacao]), 2))
ggcorrplot(cor(df_teresina[, lab.corr]), type = "lower", outline.color = "white",
lab = TRUE, lab_size = 2)
ggcorrplot(cor(df_teresina[, lab.corr]), type = "lower", outline.color = "white",
lab = TRUE, lab_size = 2)
df_teresina_scaled = scale(subset(df_teresina, select = -c(UF, municipality, code, ID,
area_de_ponderacao, N)))
PCA = princomp(df_teresina_scaled)
summary(PCA)
fviz_pca_var(PCA, col.var = "cos2", gradient.cols = c("red", "grey", "green"))
fviz_pca_var(PCA, col.var = "cos2", gradient.cols = c("red", "grey", "green"))
df_teresina_efa = subset(df_teresina, select = -c(UF, municipality, code, ID,
area_de_ponderacao, N))
KMO(df_teresina_efa)
fa.parallel(df_teresina_efa, fa="fa")
EFA = factanal(df_teresina_efa, factors = 5, scores = 'regression', nstart = 100)
EFA
EFA = factanal(df_teresina_efa, factors = 3, scores = 'regression', nstart = 100)
EFA$PVAL
pca_index = data.frame(PCA$loadings[, 1:3])
summary(pca_index)
median(as.matrix(pca_index))
efa_index = data.frame(EFA$loadings[, 1:3])
summary(efa_index)
median(as.matrix(efa_index))
efa_index = data.frame(EFA$loadings[, 1:3])
summary(efa_index)
EFA$scores[, 1]
efa_index = data.frame(EFA$loadings[, 1:3])
summary(efa_index)
EFA$scores
efa_index = data.frame(EFA$loadings[, 1:3])
summary(efa_index)
median(as.matrix(efa_index))
sf.obj$Factor1 = EFA$scores[, 1]
merge.shp = raster::shapefile(
x = paste0('shapefiles/Teresina AP.shp'))
# convertendo para sf
sf.obj = st_as_sf(merge.shp)
# ordenando por AP
sf.obj = sf.obj[order(sf.obj$CD_APONDE), ]
sf.obj$Factor1 = EFA$scores[, 1]
# classificando em quintis
sf.obj$Factor1_cat = quant.class(sf.obj$Factor1, c = 5)
library(readr)
library(dplyr)
library(FactoMineR)
library(factoextra)
library(corrplot)
library(ggplot2)
library(tidyverse)
library(ggcorrplot)
source("_src/src.R")
library(ggspatial)
#library(ggsn)
library(raster)
#library(rgdal)
library(sf)
library(sp)
library(GGally)
library(stats)
library(maps)
library(psych)
set.seed(111)
options(scipen = 999)
df_teresina = read.csv("SES_Teresina.csv")
merge.shp = raster::shapefile(
x = paste0('shapefiles/Teresina AP.shp'))
# convertendo para sf
sf.obj = st_as_sf(merge.shp)
# ordenando por AP
sf.obj = sf.obj[order(sf.obj$CD_APONDE), ]
sf.obj$Factor1 = EFA$scores[, 1]
# classificando em quintis
sf.obj$Factor1_cat = quant.class(sf.obj$Factor1, c = 5)
# invocando ggplot
p = ggplot(data = sf.obj) +
# raster geom
geom_sf(aes(fill = Factor1_cat)) +
# tema
theme(
# legenda
legend.title = element_text(face = 'bold'),
legend.key = element_blank(),
legend.background = element_rect(colour = 'black'),
# painéis
panel.background = element_blank(),
panel.border = element_rect(colour = 'black', fill = NA),
# título
plot.title = element_text(hjust = 0.5, face = 'bold')
) +
# título
ggtitle(paste('Scores do 1º Fator (EFA c/ m = 1)')) +
# legenda
guides(fill = guide_legend('Factor1')) +
# paleta de cores
scale_fill_brewer(palette = 'RdYlBu') +
# barra de escala (ggspatial)
ggspatial::annotation_scale()
# rosa dos ventos (ggsn)
#  ggsn::north(sf.obj)
print(p)
# salvando em arquivo [caixa quadrada] (png)
c.width = 1; c.height = 1; c.res = 1.4
dev.print(file = '_out/figures/figMap_EFA_TODOS.png',
device = png, width = 1280*c.width, height = 720*c.height, res = 96*c.res, units = 'px')
sf.obj$Componente1 = PCA$scores[, 1]
# classificando em quintis
sf.obj$Componente1_cat = quant.class(sf.obj$Componente1, c = 5)
# invocando ggplot
p = ggplot(data = sf.obj) +
# raster geom
geom_sf(aes(fill = Componente1_cat)) +
# tema
theme(
# legenda
legend.title = element_text(face = 'bold'),
legend.key = element_blank(),
legend.background = element_rect(colour = 'black'),
# painéis
panel.background = element_blank(),
panel.border = element_rect(colour = 'black', fill = NA),
# título
plot.title = element_text(hjust = 0.5, face = 'bold')
) +
# título
ggtitle(paste('Scores do 1º Componente (PCA c/ m = 1)')) +
# legenda
guides(fill = guide_legend('Componente1')) +
# paleta de cores
scale_fill_brewer(palette = 'RdYlBu') +
# barra de escala (ggspatial)
ggspatial::annotation_scale()
# rosa dos ventos (ggsn)
#  ggsn::north(sf.obj)
print(p)
sf.obj$Factor1 = EFA$scores[, 1]
# classificando em quintis
sf.obj$Factor1_cat = quant.class(sf.obj$Factor1, c = 5)
# invocando ggplot
p = ggplot(data = sf.obj) +
# raster geom
geom_sf(aes(fill = Factor1_cat)) +
# tema
theme(
# legenda
legend.title = element_text(face = 'bold'),
legend.key = element_blank(),
legend.background = element_rect(colour = 'black'),
# painéis
panel.background = element_blank(),
panel.border = element_rect(colour = 'black', fill = NA),
# título
plot.title = element_text(hjust = 0.5, face = 'bold')
) +
# título
ggtitle(paste('Scores do 1º Fator (EFA c/ m = 1)')) +
# legenda
guides(fill = guide_legend('Factor1')) +
# paleta de cores
scale_fill_brewer(palette = 'RdYlBu') +
# barra de escala (ggspatial)
ggspatial::annotation_scale()
# rosa dos ventos (ggsn)
#  ggsn::north(sf.obj)
print(p)
merge.shp = raster::shapefile(
x = paste0('shapefiles/Teresina AP.shp'))
# convertendo para sf
sf.obj = st_as_sf(merge.shp)
# ordenando por AP
sf.obj = sf.obj[order(sf.obj$CD_APONDE), ]
sf.obj$Componente1 = PCA$scores[, 1]
# classificando em quintis
sf.obj$Componente1_cat = quant.class(sf.obj$Componente1, c = 5)
# invocando ggplot
p = ggplot(data = sf.obj) +
# raster geom
geom_sf(aes(fill = Componente1_cat)) +
# tema
theme(
# legenda
legend.title = element_text(face = 'bold'),
legend.key = element_blank(),
legend.background = element_rect(colour = 'black'),
# painéis
panel.background = element_blank(),
panel.border = element_rect(colour = 'black', fill = NA),
# título
plot.title = element_text(hjust = 0.5, face = 'bold')
) +
# título
ggtitle(paste('Scores do 1º Componente (PCA c/ m = 1)')) +
# legenda
guides(fill = guide_legend('Componente1')) +
# paleta de cores
scale_fill_brewer(palette = 'RdYlBu') +
# barra de escala (ggspatial)
ggspatial::annotation_scale()
# rosa dos ventos (ggsn)
#  ggsn::north(sf.obj)
print(p)
library(readr)
library(dplyr)
library(FactoMineR)
library(factoextra)
library(corrplot)
library(ggplot2)
library(tidyverse)
library(ggcorrplot)
source("_src/src.R")
library(ggspatial)
#library(ggsn)
library(raster)
#library(rgdal)
library(sf)
library(sp)
library(GGally)
library(stats)
library(maps)
library(psych)
set.seed(111)
options(scipen = 999)
df_teresina = read.csv("SES_Teresina.csv")
lab.corr_saneamento = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL')
lab.corr_moradia = c('P_MATPAREDES', 'P_OVERCROWDING')
lab.corr_emprego = c('P_DESEMP', 'P_FORTRAB')
lab.corr_educacao = c('P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
lab.corr = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL',
'P_MATPAREDES', 'P_OVERCROWDING',
'P_DESEMP', 'P_FORTRAB',
'P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
saneamento = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_saneamento]), 2))
lab.corr_saneamento = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL')
lab.corr_moradia = c('P_MATPAREDES', 'P_OVERCROWDING')
lab.corr_emprego = c('P_DESEMP', 'P_FORTRAB')
lab.corr_educacao = c('P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
lab.corr = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL',
'P_MATPAREDES', 'P_OVERCROWDING',
'P_DESEMP', 'P_FORTRAB',
'P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
saneamento = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_saneamento]), 2))
barplot(saneamento$as.matrix.colMeans.df_teresina...lab.corr_saneamento....2.
main = "Maximum Temperatures in a Week",
lab.corr_saneamento = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL')
lab.corr_moradia = c('P_MATPAREDES', 'P_OVERCROWDING')
lab.corr_emprego = c('P_DESEMP', 'P_FORTRAB')
lab.corr_educacao = c('P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
lab.corr = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL',
'P_MATPAREDES', 'P_OVERCROWDING',
'P_DESEMP', 'P_FORTRAB',
'P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
saneamento = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_saneamento]), 2))
barplot(saneamento$as.matrix.colMeans.df_teresina...lab.corr_saneamento....2.,
main = "Maximum Temperatures in a Week",
xlab = "Degree Celsius",
ylab = "Day",
names.arg = row.names(saneamento),
col = "darkred",
horiz = TRUE)
lab.corr_saneamento = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL')
lab.corr_moradia = c('P_MATPAREDES', 'P_OVERCROWDING')
lab.corr_emprego = c('P_DESEMP', 'P_FORTRAB')
lab.corr_educacao = c('P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
lab.corr = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL',
'P_MATPAREDES', 'P_OVERCROWDING',
'P_DESEMP', 'P_FORTRAB',
'P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
saneamento = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_saneamento]), 2))
barplot(saneamento$as.matrix.colMeans.df_teresina...lab.corr_saneamento....2.,
main = "Maximum Temperatures in a Week",
xlab = "Degree Celsius",
ylab = "Day",
names.arg = row.names(saneamento),
col = "darkred",
horiz = TRUE)
row.names(saneamento)
lab.corr_saneamento = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL')
lab.corr_moradia = c('P_MATPAREDES', 'P_OVERCROWDING')
lab.corr_emprego = c('P_DESEMP', 'P_FORTRAB')
lab.corr_educacao = c('P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
lab.corr = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL',
'P_MATPAREDES', 'P_OVERCROWDING',
'P_DESEMP', 'P_FORTRAB',
'P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
saneamento = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_saneamento]), 2))
barplot(saneamento$as.matrix.colMeans.df_teresina...lab.corr_saneamento....2.,
main = "Maximum Temperatures in a Week",
xlab = "Degree Celsius",
ylab = "Day",
names.arg = row.names(saneamento),
col = "darkred")
library(readr)
library(dplyr)
library(FactoMineR)
library(factoextra)
library(corrplot)
library(ggplot2)
library(tidyverse)
library(ggcorrplot)
source("_src/src.R")
library(ggspatial)
#library(ggsn)
library(raster)
#library(rgdal)
library(sf)
library(sp)
library(GGally)
library(stats)
library(maps)
library(psych)
set.seed(111)
options(scipen = 999)
df_teresina = read.csv("SES_Teresina.csv")
df_teresina$ID = df_teresina$area_de_ponderacao %% 100
sum(df_teresina$N)
subset(df_teresina[order(df_teresina$N), ], select = c('ID', 'N'))
lab.corr_saneamento = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL')
lab.corr_moradia = c('P_MATPAREDES', 'P_OVERCROWDING')
lab.corr_emprego = c('P_DESEMP', 'P_FORTRAB')
lab.corr_educacao = c('P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
lab.corr = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL',
'P_MATPAREDES', 'P_OVERCROWDING',
'P_DESEMP', 'P_FORTRAB',
'P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
saneamento = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_saneamento]), 2))
barplot(saneamento$as.matrix.colMeans.df_teresina...lab.corr_saneamento....2.,
main = "Maximum Temperatures in a Week",
xlab = "Degree Celsius",
ylab = "Day",
names.arg = row.names(saneamento),
col = "darkred",
las=2)
lab.corr_saneamento = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL')
lab.corr_moradia = c('P_MATPAREDES', 'P_OVERCROWDING')
lab.corr_emprego = c('P_DESEMP', 'P_FORTRAB')
lab.corr_educacao = c('P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
lab.corr = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL',
'P_MATPAREDES', 'P_OVERCROWDING',
'P_DESEMP', 'P_FORTRAB',
'P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
saneamento = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_saneamento]), 2))
barplot(saneamento$as.matrix.colMeans.df_teresina...lab.corr_saneamento....2.,
main = "Vetore de médias (Saneamento)"
ylab = "Proporções (médias)",
lab.corr_saneamento = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL')
lab.corr_moradia = c('P_MATPAREDES', 'P_OVERCROWDING')
lab.corr_emprego = c('P_DESEMP', 'P_FORTRAB')
lab.corr_educacao = c('P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
lab.corr = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL',
'P_MATPAREDES', 'P_OVERCROWDING',
'P_DESEMP', 'P_FORTRAB',
'P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
saneamento = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_saneamento]), 2))
barplot(saneamento$as.matrix.colMeans.df_teresina...lab.corr_saneamento....2.,
main = "Vetor de médias (Saneamento)",
ylab = "Proporções (médias)",
names.arg = row.names(saneamento),
col = "darkred",
las=2)
moradia = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_moradia]), 2))
barplot(moradia$as.matrix.colMeans.df_teresina...lab.corr_saneamento....2.,
main = "Vetor de médias (moradia)",
ylab = "Proporções (médias)",
names.arg = row.names(moradia),
col = "darkred",
las=2)
moradia = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_moradia]), 2))
barplot(moradia$as.matrix.colMeans.df_teresina...lab.corr_moradia....2.,
main = "Vetor de médias (moradia)",
ylab = "Proporções (médias)",
names.arg = row.names(moradia),
col = "darkred",
las=2)
emprego = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_emprego]), 2))
barplot(moradia$as.matrix.colMeans.df_teresina...lab.corr_emprego....2.,
main = "Vetor de médias (emprego)",
ylab = "Proporções (médias)",
names.arg = row.names(emprego),
col = "darkred",
las=2)
emprego = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_emprego]), 2))
barplot(emprego$as.matrix.colMeans.df_teresina...lab.corr_emprego....2.,
main = "Vetor de médias (emprego)",
ylab = "Proporções (médias)",
names.arg = row.names(emprego),
col = "darkred",
las=2)
educacao = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_educacao]), 2))
barplot(educacao$as.matrix.colMeans.df_teresina...lab.corr_educacao....2.,
main = "Vetor de médias (educacao)",
ylab = "Proporções (médias)",
names.arg = row.names(educacao),
col = "darkred",
las=2)
lab.corr_saneamento = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL')
lab.corr_moradia = c('P_MATPAREDES', 'P_OVERCROWDING')
lab.corr_emprego = c('P_DESEMP', 'P_FORTRAB')
lab.corr_educacao = c('P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
lab.corr = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL',
'P_MATPAREDES', 'P_OVERCROWDING',
'P_DESEMP', 'P_FORTRAB',
'P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
saneamento = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_saneamento]), 2))
barplot(saneamento$as.matrix.colMeans.df_teresina...lab.corr_saneamento....2.,
main = "Vetor de médias (Saneamento)",
ylab = "Proporções (médias)",
names.arg = row.names(saneamento),
col = "darkred",
las=2,
cex.names=1.5)
lab.corr_saneamento = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL')
lab.corr_moradia = c('P_MATPAREDES', 'P_OVERCROWDING')
lab.corr_emprego = c('P_DESEMP', 'P_FORTRAB')
lab.corr_educacao = c('P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
lab.corr = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL',
'P_MATPAREDES', 'P_OVERCROWDING',
'P_DESEMP', 'P_FORTRAB',
'P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
saneamento = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_saneamento]), 2))
barplot(saneamento$as.matrix.colMeans.df_teresina...lab.corr_saneamento....2.,
main = "Vetor de médias (Saneamento)",
ylab = "Proporções (médias)",
names.arg = row.names(saneamento),
col = "darkred",
las=2,
cex.names=0.5)
lab.corr_saneamento = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL')
lab.corr_moradia = c('P_MATPAREDES', 'P_OVERCROWDING')
lab.corr_emprego = c('P_DESEMP', 'P_FORTRAB')
lab.corr_educacao = c('P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
lab.corr = c('P_AGUAENC', 'P_AGUAENCDENTRO', 'P_AGUAREDE', 'P_ESGOTOPUB', 'P_ESGOTOQUAL',
'P_MATPAREDES', 'P_OVERCROWDING',
'P_DESEMP', 'P_FORTRAB',
'P_ENSFUND', 'P_ENSMED', 'P_ENSSUP', 'P_FREQESCOLA')
saneamento = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_saneamento]), 2))
barplot(saneamento$as.matrix.colMeans.df_teresina...lab.corr_saneamento....2.,
main = "Vetor de médias (Saneamento)",
ylab = "Proporções (médias)",
names.arg = row.names(saneamento),
col = "darkred",
las=2,
cex.names=0.45)
moradia = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_moradia]), 2))
barplot(moradia$as.matrix.colMeans.df_teresina...lab.corr_moradia....2.,
main = "Vetor de médias (moradia)",
ylab = "Proporções (médias)",
names.arg = row.names(moradia),
col = "darkred",
las=2,
cex.names=0.45)
emprego = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_emprego]), 2))
barplot(emprego$as.matrix.colMeans.df_teresina...lab.corr_emprego....2.,
main = "Vetor de médias (emprego)",
ylab = "Proporções (médias)",
names.arg = row.names(emprego),
col = "darkred",
las=2,
cex.names=0.45)
educacao = data.frame(as.matrix(colMeans(df_teresina[, lab.corr_educacao]), 2))
barplot(educacao$as.matrix.colMeans.df_teresina...lab.corr_educacao....2.,
main = "Vetor de médias (educacao)",
ylab = "Proporções (médias)",
names.arg = row.names(educacao),
col = "darkred",
las=2,
cex.names=0.45)
